trigger:
  - main

pr:
  - main

parameters:
  - name: platforms
    type: object
    default:
      - name: Windows
        image: windows-latest
      - name: Ubuntu
        image: ubuntu-latest
      - name: macOS
        image: macOS-15

variables:
  buildConfiguration: 'Debug'
  dotnetVersion: '9.0.x'

stages:
  - ${{ each platform in parameters.platforms }}:
    - stage: BuildAndTest_${{ platform.name }}
      displayName: '${{ platform.name }}'
      dependsOn: []
      jobs:
        - job: Build_${{ platform.name }}
          displayName: 'Build on ${{ platform.name }}'
          pool:
            vmImage: ${{ platform.image }}
          steps:
            - task: UseDotNet@2
              displayName: 'Install .NET SDK'
              inputs:
                packageType: 'sdk'
                version: $(dotnetVersion)
            - script: dotnet workload install maui-android
              displayName: 'Install .NET MAUI workload for Linux'
              condition: eq(variables['Agent.OS'], 'Linux')
            - script: dotnet workload install maui
              displayName: 'Install .NET MAUI workload for Windows and macOS'
              condition: ne(variables['Agent.OS'], 'Linux')
            - task: DotNetCoreCLI@2
              displayName: 'Build solution'
              inputs:
                command: 'build'
                projects: '**/*.sln'
                arguments: '--configuration $(buildConfiguration)'

        - job: Test_${{ platform.name }}
          displayName: 'Run tests on ${{ platform.name }}'
          dependsOn: Build_${{ platform.name }}
          pool:
            vmImage: ${{ platform.image }}
          steps:
            - task: UseDotNet@2
              displayName: 'Install .NET SDK'
              inputs:
                packageType: 'sdk'
                version: $(dotnetVersion)
            - script: dotnet workload install maui-android
              displayName: 'Install .NET MAUI workload for Linux'
              condition: eq(variables['Agent.OS'], 'Linux')
            - script: dotnet workload install maui
              displayName: 'Install .NET MAUI workload for Windows and macOS'
              condition: ne(variables['Agent.OS'], 'Linux')
            - task: DotNetCoreCLI@2
              displayName: 'Run tests'
              inputs:
                command: 'test'
                projects: '**/tests/**/*.csproj'
                arguments: '--configuration $(buildConfiguration) --collect:"XPlat Code Coverage"'
                publishTestResults: true
            - task: PublishCodeCoverageResults@2
              displayName: 'Publish code coverage'
              condition: succeededOrFailed()
              inputs:
                codeCoverageTool: 'Cobertura'
                summaryFileLocation: '$(Agent.TempDirectory)/**/coverage.cobertura.xml'
                reportDirectory: '$(Agent.TempDirectory)/**/coverage'
